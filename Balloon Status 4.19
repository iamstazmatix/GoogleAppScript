// Update this constant with the new Google Sheet link every month
const balloonsSheetUrl = "https://docs.google.com/spreadsheets/d/1iia6pcSwlEsDVetEt0P_WYqo91fO3MhBywKFvl1FqHs/edit?pli=1#gid=488390916";
  // Call monitorOverallSheet with handleColumnABUpdate
monitorOverallSheet(handleColumnABUpdate);

// Your handleColumnABUpdate function should be defined in your main script
function handleColumnABUpdate(sheet, range) {
  // Your logic to handle Column AB update
}

function monitorOverallSheetForTrigger(e) {
  const editedSheet = e.source.getSheetName();
  
  if (editedSheet !== 'Overall') {
    monitorOverallSheet();
  }
}

function monitorOverallSheet(handleColumnABUpdate) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const overallSheet = ss.getSheetByName('Overall');
  const numRows = overallSheet.getLastRow();

  for (let row = 2; row <= numRows; row++) {
    const workOrderNumber = overallSheet.getRange(row, 2).getValue();
    if (workOrderNumber) {
      const dataToCopy = overallSheet.getRange(row, 7, 1, 3).getValues();
      updateBalloonsSheet(workOrderNumber, dataToCopy, handleColumnABUpdate);
    }
  }
}


function updateBalloonsSheet(workOrderNumber, dataToCopy, handleColumnABUpdate) {
  const balloonsSheet = SpreadsheetApp.openByUrl(balloonsSheetUrl);
  const balloonsTab = balloonsSheet.getSheetByName('Balloons');
  const balloonsNumRows = balloonsTab.getLastRow();

  for (let row = 2; row <= balloonsNumRows; row++) {
    const balloonsWorkOrderNumber = balloonsTab.getRange(row, 3).getValue();
    if (workOrderNumber === balloonsWorkOrderNumber) {
      balloonsTab.getRange(row, 28, 1, 1).setValues([[dataToCopy[0][0]]]);
      balloonsTab.getRange(row, 29, 1, 1).setValues([[dataToCopy[0][1]]]);
      balloonsTab.getRange(row, 31, 1, 1).setValues([[dataToCopy[0][2]]]);

      // Call handleColumnABUpdate() after updating the sheet
      const range = balloonsTab.getRange(row, 28); // Column AB
      handleColumnABUpdate(balloonsTab, range);
    }
  }
}

